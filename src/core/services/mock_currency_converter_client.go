// Code generated by mockery v2.4.0-beta. DO NOT EDIT.

package services

import (
	errors "github.com/dleonsal/beers-api/src/errors"
	mock "github.com/stretchr/testify/mock"
)

// MockCurrencyConverterClient is an autogenerated mock type for the CurrencyConverterClient type
type MockCurrencyConverterClient struct {
	mock.Mock
}

// ConvertValueToNewCurrency provides a mock function with given fields: oldCurrency, newCurrency, value
func (_m *MockCurrencyConverterClient) ConvertValueToNewCurrency(oldCurrency string, newCurrency string, value float64) (float64, *errors.RestError) {
	ret := _m.Called(oldCurrency, newCurrency, value)

	var r0 float64
	if rf, ok := ret.Get(0).(func(string, string, float64) float64); ok {
		r0 = rf(oldCurrency, newCurrency, value)
	} else {
		r0 = ret.Get(0).(float64)
	}

	var r1 *errors.RestError
	if rf, ok := ret.Get(1).(func(string, string, float64) *errors.RestError); ok {
		r1 = rf(oldCurrency, newCurrency, value)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*errors.RestError)
		}
	}

	return r0, r1
}
